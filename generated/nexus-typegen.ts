/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "../src/types"
import * as photon from "@generated/photon"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CategoryCreateInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    offer?: NexusGenInputs['OfferCreateOneWithoutOfferInput'] | null; // OfferCreateOneWithoutOfferInput
    slug: string; // String!
  }
  CategoryCreateManyWithoutCategoriesInput: { // input type
    connect?: NexusGenInputs['CategoryWhereUniqueInput'][] | null; // [CategoryWhereUniqueInput!]
    create?: NexusGenInputs['CategoryCreateWithoutOfferInput'][] | null; // [CategoryCreateWithoutOfferInput!]
  }
  CategoryCreateWithoutOfferInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
  }
  CategoryWhereUniqueInput: { // input type
    id?: string | null; // ID
    slug?: string | null; // String
  }
  CommentCreateManyWithoutCommentsInput: { // input type
    connect?: NexusGenInputs['CommentWhereUniqueInput'][] | null; // [CommentWhereUniqueInput!]
    create?: NexusGenInputs['CommentCreateWithoutOfferInput'][] | null; // [CommentCreateWithoutOfferInput!]
  }
  CommentCreateOneWithoutCommentInput: { // input type
    connect?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
    create?: NexusGenInputs['CommentCreateWithoutReplyInput'] | null; // CommentCreateWithoutReplyInput
  }
  CommentCreateWithoutOfferInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutAuthorInput']; // UserCreateOneWithoutAuthorInput!
    body: string; // String!
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    reply?: NexusGenInputs['ReplyCreateOneWithoutReplyInput'] | null; // ReplyCreateOneWithoutReplyInput
    updatedAt?: any | null; // DateTime
  }
  CommentCreateWithoutReplyInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutAuthorInput']; // UserCreateOneWithoutAuthorInput!
    body: string; // String!
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    offer: NexusGenInputs['OfferCreateOneWithoutOfferInput']; // OfferCreateOneWithoutOfferInput!
    updatedAt?: any | null; // DateTime
  }
  CommentWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  LocationCreateManyWithoutLocationInput: { // input type
    connect?: NexusGenInputs['LocationWhereUniqueInput'][] | null; // [LocationWhereUniqueInput!]
    create?: NexusGenInputs['LocationCreateWithoutOfferInput'][] | null; // [LocationCreateWithoutOfferInput!]
  }
  LocationCreateWithoutOfferInput: { // input type
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
  }
  LocationWhereUniqueInput: { // input type
    id?: string | null; // ID
    slug?: string | null; // String
  }
  OfferCreateManyWithoutOffersInput: { // input type
    connect?: NexusGenInputs['OfferWhereUniqueInput'][] | null; // [OfferWhereUniqueInput!]
    create?: NexusGenInputs['OfferCreateWithoutAuthorInput'][] | null; // [OfferCreateWithoutAuthorInput!]
  }
  OfferCreateOneWithoutOfferInput: { // input type
    connect?: NexusGenInputs['OfferWhereUniqueInput'] | null; // OfferWhereUniqueInput
    create?: NexusGenInputs['OfferCreateWithoutReviewsInput'] | null; // OfferCreateWithoutReviewsInput
  }
  OfferCreateWithoutAuthorInput: { // input type
    categories?: NexusGenInputs['CategoryCreateManyWithoutCategoriesInput'] | null; // CategoryCreateManyWithoutCategoriesInput
    comments?: NexusGenInputs['CommentCreateManyWithoutCommentsInput'] | null; // CommentCreateManyWithoutCommentsInput
    contacts?: NexusGenInputs['OfferCreatecontactsInput'] | null; // OfferCreatecontactsInput
    createdAt?: any | null; // DateTime
    description: string; // String!
    discountPercentage?: number | null; // Float
    discountprice?: number | null; // Float
    gallery?: NexusGenInputs['OfferCreategalleryInput'] | null; // OfferCreategalleryInput
    id?: string | null; // ID
    location?: NexusGenInputs['LocationCreateManyWithoutLocationInput'] | null; // LocationCreateManyWithoutLocationInput
    price: number; // Float!
    promoCode?: string | null; // String
    reviews?: NexusGenInputs['ReviewCreateManyWithoutReviewsInput'] | null; // ReviewCreateManyWithoutReviewsInput
    tags?: NexusGenInputs['OfferCreatetagsInput'] | null; // OfferCreatetagsInput
    thumbnail?: string | null; // String
    title: string; // String!
    updatedAt?: any | null; // DateTime
    url?: string | null; // String
  }
  OfferCreateWithoutReviewsInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutAuthorInput']; // UserCreateOneWithoutAuthorInput!
    categories?: NexusGenInputs['CategoryCreateManyWithoutCategoriesInput'] | null; // CategoryCreateManyWithoutCategoriesInput
    comments?: NexusGenInputs['CommentCreateManyWithoutCommentsInput'] | null; // CommentCreateManyWithoutCommentsInput
    contacts?: NexusGenInputs['OfferCreatecontactsInput'] | null; // OfferCreatecontactsInput
    createdAt?: any | null; // DateTime
    description: string; // String!
    discountPercentage?: number | null; // Float
    discountprice?: number | null; // Float
    gallery?: NexusGenInputs['OfferCreategalleryInput'] | null; // OfferCreategalleryInput
    id?: string | null; // ID
    location?: NexusGenInputs['LocationCreateManyWithoutLocationInput'] | null; // LocationCreateManyWithoutLocationInput
    price: number; // Float!
    promoCode?: string | null; // String
    tags?: NexusGenInputs['OfferCreatetagsInput'] | null; // OfferCreatetagsInput
    thumbnail?: string | null; // String
    title: string; // String!
    updatedAt?: any | null; // DateTime
    url?: string | null; // String
  }
  OfferCreatecontactsInput: { // input type
    set?: string[] | null; // [String!]
  }
  OfferCreategalleryInput: { // input type
    set?: string[] | null; // [String!]
  }
  OfferCreatetagsInput: { // input type
    set?: string[] | null; // [String!]
  }
  OfferWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  ReplyCreateManyWithoutRepliesInput: { // input type
    connect?: NexusGenInputs['ReplyWhereUniqueInput'][] | null; // [ReplyWhereUniqueInput!]
    create?: NexusGenInputs['ReplyCreateWithoutAuthorInput'][] | null; // [ReplyCreateWithoutAuthorInput!]
  }
  ReplyCreateOneWithoutReplyInput: { // input type
    connect?: NexusGenInputs['ReplyWhereUniqueInput'] | null; // ReplyWhereUniqueInput
    create?: NexusGenInputs['ReplyCreateWithoutCommentInput'] | null; // ReplyCreateWithoutCommentInput
  }
  ReplyCreateWithoutAuthorInput: { // input type
    body: string; // String!
    comment: NexusGenInputs['CommentCreateOneWithoutCommentInput']; // CommentCreateOneWithoutCommentInput!
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    updatedAt?: any | null; // DateTime
  }
  ReplyCreateWithoutCommentInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutAuthorInput']; // UserCreateOneWithoutAuthorInput!
    body: string; // String!
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    updatedAt?: any | null; // DateTime
  }
  ReplyWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  ReviewCreateManyWithoutReviewsInput: { // input type
    connect?: NexusGenInputs['ReviewWhereUniqueInput'][] | null; // [ReviewWhereUniqueInput!]
    create?: NexusGenInputs['ReviewCreateWithoutAuthorInput'][] | null; // [ReviewCreateWithoutAuthorInput!]
  }
  ReviewCreateWithoutAuthorInput: { // input type
    body: string; // String!
    createdAt?: any | null; // DateTime
    id?: string | null; // ID
    offer: NexusGenInputs['OfferCreateOneWithoutOfferInput']; // OfferCreateOneWithoutOfferInput!
    rating: number; // Int!
    updatedAt?: any | null; // DateTime
  }
  ReviewWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
  UserCreateOneWithoutAuthorInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    create?: NexusGenInputs['UserCreateWithoutCommentsInput'] | null; // UserCreateWithoutCommentsInput
  }
  UserCreateWithoutCommentsInput: { // input type
    bio?: string | null; // String
    email: string; // String!
    emailVarificationToken?: string | null; // String
    gender: NexusGenEnums['GENDERS']; // GENDERS!
    id?: string | null; // ID
    location?: string | null; // String
    name: string; // String!
    offers?: NexusGenInputs['OfferCreateManyWithoutOffersInput'] | null; // OfferCreateManyWithoutOffersInput
    password: string; // String!
    passwordResetToken?: string | null; // String
    passwordResetTokenExpiration?: string | null; // String
    permissions?: NexusGenInputs['UserCreatepermissionsInput'] | null; // UserCreatepermissionsInput
    phoneNumber: string; // String!
    profileCover?: string | null; // String
    profilePhoto?: string | null; // String
    replies?: NexusGenInputs['ReplyCreateManyWithoutRepliesInput'] | null; // ReplyCreateManyWithoutRepliesInput
    reviews?: NexusGenInputs['ReviewCreateManyWithoutReviewsInput'] | null; // ReviewCreateManyWithoutReviewsInput
    username: string; // String!
  }
  UserCreatepermissionsInput: { // input type
    set?: NexusGenEnums['PERMISSIONS'][] | null; // [PERMISSIONS!]
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // ID
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  GENDERS: photon.GENDERS
  PERMISSIONS: photon.PERMISSIONS
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Category: photon.Category;
  Mutation: {};
  Offer: photon.Offer;
  Query: {};
  User: photon.User;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  CategoryCreateInput: NexusGenInputs['CategoryCreateInput'];
  CategoryCreateManyWithoutCategoriesInput: NexusGenInputs['CategoryCreateManyWithoutCategoriesInput'];
  CategoryCreateWithoutOfferInput: NexusGenInputs['CategoryCreateWithoutOfferInput'];
  CategoryWhereUniqueInput: NexusGenInputs['CategoryWhereUniqueInput'];
  CommentCreateManyWithoutCommentsInput: NexusGenInputs['CommentCreateManyWithoutCommentsInput'];
  CommentCreateOneWithoutCommentInput: NexusGenInputs['CommentCreateOneWithoutCommentInput'];
  CommentCreateWithoutOfferInput: NexusGenInputs['CommentCreateWithoutOfferInput'];
  CommentCreateWithoutReplyInput: NexusGenInputs['CommentCreateWithoutReplyInput'];
  CommentWhereUniqueInput: NexusGenInputs['CommentWhereUniqueInput'];
  LocationCreateManyWithoutLocationInput: NexusGenInputs['LocationCreateManyWithoutLocationInput'];
  LocationCreateWithoutOfferInput: NexusGenInputs['LocationCreateWithoutOfferInput'];
  LocationWhereUniqueInput: NexusGenInputs['LocationWhereUniqueInput'];
  OfferCreateManyWithoutOffersInput: NexusGenInputs['OfferCreateManyWithoutOffersInput'];
  OfferCreateOneWithoutOfferInput: NexusGenInputs['OfferCreateOneWithoutOfferInput'];
  OfferCreateWithoutAuthorInput: NexusGenInputs['OfferCreateWithoutAuthorInput'];
  OfferCreateWithoutReviewsInput: NexusGenInputs['OfferCreateWithoutReviewsInput'];
  OfferCreatecontactsInput: NexusGenInputs['OfferCreatecontactsInput'];
  OfferCreategalleryInput: NexusGenInputs['OfferCreategalleryInput'];
  OfferCreatetagsInput: NexusGenInputs['OfferCreatetagsInput'];
  OfferWhereUniqueInput: NexusGenInputs['OfferWhereUniqueInput'];
  ReplyCreateManyWithoutRepliesInput: NexusGenInputs['ReplyCreateManyWithoutRepliesInput'];
  ReplyCreateOneWithoutReplyInput: NexusGenInputs['ReplyCreateOneWithoutReplyInput'];
  ReplyCreateWithoutAuthorInput: NexusGenInputs['ReplyCreateWithoutAuthorInput'];
  ReplyCreateWithoutCommentInput: NexusGenInputs['ReplyCreateWithoutCommentInput'];
  ReplyWhereUniqueInput: NexusGenInputs['ReplyWhereUniqueInput'];
  ReviewCreateManyWithoutReviewsInput: NexusGenInputs['ReviewCreateManyWithoutReviewsInput'];
  ReviewCreateWithoutAuthorInput: NexusGenInputs['ReviewCreateWithoutAuthorInput'];
  ReviewWhereUniqueInput: NexusGenInputs['ReviewWhereUniqueInput'];
  UserCreateOneWithoutAuthorInput: NexusGenInputs['UserCreateOneWithoutAuthorInput'];
  UserCreateWithoutCommentsInput: NexusGenInputs['UserCreateWithoutCommentsInput'];
  UserCreatepermissionsInput: NexusGenInputs['UserCreatepermissionsInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  GENDERS: NexusGenEnums['GENDERS'];
  PERMISSIONS: NexusGenEnums['PERMISSIONS'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Category: { // field return type
    id: string; // ID!
    name: string; // String!
    slug: string; // String!
  }
  Mutation: { // field return type
    createOffer: NexusGenRootTypes['Offer']; // Offer!
    createOneCategory: NexusGenRootTypes['Category']; // Category!
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
  }
  Offer: { // field return type
    author: NexusGenRootTypes['User']; // User!
    contacts: string[]; // [String!]!
    description: string; // String!
    gallery: string[]; // [String!]!
    id: string; // ID!
    price: number; // Float!
    promoCode: string | null; // String
    tags: string[]; // [String!]!
    thumbnail: string | null; // String
    title: string; // String!
    url: string | null; // String
  }
  Query: { // field return type
    me: NexusGenRootTypes['User']; // User!
    offers: NexusGenRootTypes['Offer'][]; // [Offer!]!
  }
  User: { // field return type
    email: string; // String!
    gender: NexusGenEnums['GENDERS']; // GENDERS!
    id: string; // ID!
    name: string; // String!
    offers: NexusGenRootTypes['Offer'][] | null; // [Offer!]
    permissions: NexusGenEnums['PERMISSIONS'][]; // [PERMISSIONS!]!
    phoneNumber: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOffer: { // args
      description: string; // String!
      discountPercentage?: number | null; // Float
      discountprice?: number | null; // Float
      gallery?: NexusGenInputs['OfferCreategalleryInput'] | null; // OfferCreategalleryInput
      price: number; // Float!
      thumbnail?: string | null; // String
      title: string; // String!
      url?: string | null; // String
    }
    createOneCategory: { // args
      data: NexusGenInputs['CategoryCreateInput']; // CategoryCreateInput!
    }
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    signup: { // args
      email?: string | null; // String
      gender?: NexusGenEnums['GENDERS'] | null; // GENDERS
      name?: string | null; // String
      password?: string | null; // String
      phoneNumber?: string | null; // String
      username?: string | null; // String
    }
  }
  User: {
    offers: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Category" | "Mutation" | "Offer" | "Query" | "User";

export type NexusGenInputNames = "CategoryCreateInput" | "CategoryCreateManyWithoutCategoriesInput" | "CategoryCreateWithoutOfferInput" | "CategoryWhereUniqueInput" | "CommentCreateManyWithoutCommentsInput" | "CommentCreateOneWithoutCommentInput" | "CommentCreateWithoutOfferInput" | "CommentCreateWithoutReplyInput" | "CommentWhereUniqueInput" | "LocationCreateManyWithoutLocationInput" | "LocationCreateWithoutOfferInput" | "LocationWhereUniqueInput" | "OfferCreateManyWithoutOffersInput" | "OfferCreateOneWithoutOfferInput" | "OfferCreateWithoutAuthorInput" | "OfferCreateWithoutReviewsInput" | "OfferCreatecontactsInput" | "OfferCreategalleryInput" | "OfferCreatetagsInput" | "OfferWhereUniqueInput" | "ReplyCreateManyWithoutRepliesInput" | "ReplyCreateOneWithoutReplyInput" | "ReplyCreateWithoutAuthorInput" | "ReplyCreateWithoutCommentInput" | "ReplyWhereUniqueInput" | "ReviewCreateManyWithoutReviewsInput" | "ReviewCreateWithoutAuthorInput" | "ReviewWhereUniqueInput" | "UserCreateOneWithoutAuthorInput" | "UserCreateWithoutCommentsInput" | "UserCreatepermissionsInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "GENDERS" | "PERMISSIONS";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}